# URL
URL=http://apollo.cloudns.ph

# MongoDB connection
MONGODB_URI_FILE=/run/secrets/mongodb-uri

# Output folder for uploaded files
FILE_UPLOAD_FOLDER=/data/uploads

# Google client id and secret.
GOOGLE_CLIENT_ID_FILE=/run/secrets/google-client-id
GOOGLE_CLIENT_SECRET_FILE=/run/secrets/google-client-secret

# Microsoft client id and secret.
MICROSOFT_CLIENT_ID_FILE=/run/secrets/microsoft-client-id
MICROSOFT_CLIENT_SECRET_FILE=/run/secrets/microsoft-client-secret

JWT_SECRET_FILE=/run/secrets/jwt-secret
SESSION_SECRET=/run/secrets/session-secret

# Reference sequence chunk size, defaults to 262144 (256 KiB)
# CHUNK_SIZE=5000

# Default new user role, possible values are admin, user, readOnly, and none
# Defaults to none
DEFAULT_NEW_USER_ROLE=admin

# Whether to broadcast users locations, defaults to true
# BROADCAST_USER_LOCATION=true

# Whether to allow guest users who do not have to log in, defaults to false
ALLOW_GUEST_USER=true
# If guest users are allowed, what role will they have
# Possible values are admin, readOnly and user; defaults to readonly
# GUEST_USER_ROLE=readOnly

# Apollo by default uses The Sequence Ontology. You can override this by
# providing a path to an ontology file in the OBO Graphs JSON format. You can
# use `robot` to convert an OBO or OWL to OBO Graphs JSON.
# http://robot.obolibrary.org/convert
# ONTOLOGY_FILE = '/data/ontology.json'

# Comma-separated list of Apollo plugins to use
# PLUGIN_URLS=https://example.com/apollo-plugin-example.umd.production.min.js
# Alternatively, can be a path to a file with a list of plugin URLs, one URL per
# line
# PLUGIN_URLS_FILE=/data/plugin-urls